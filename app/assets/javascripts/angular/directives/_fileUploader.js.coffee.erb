<% environment.context_class.instance_eval { include ActionView::Helpers } %>
<% environment.context_class.instance_eval { include HostHelper } %>

App.directive 'fileUploader', ['$http', '$parse', 'Download', 'MimeType', ($http, $parse, Download, MimeType) ->
  ($scope, elem, attrs) ->
    form = elem.parents('form')
    # HACK: angular doesn't recognize input type=file.
    # Create a fake control for the purposes of form error checking.
    ctrl = {$name: elem.attr('name')}
    model = attrs.model
    limit = parseInt(attrs.fileUploaderLimit)
    ngForm = null # must be set after form loads
    required = attrs.required
    $scope.canTakePhoto = navigator.camera?.getPicture?

    resetFileInput = ->
      elem.val('') # reset uploader, so re-uploading the same file registers as a change
      ngForm.$setValidity('process', true, ctrl)
      if required
        ngForm.$setValidity('required', false, ctrl)

    elem.on('change', (evt) ->
      ngForm = $scope[$scope.node + 'Form']
      if required
        elem.attr('required', true)
        ngForm.$setValidity('required', evt.target.files.length == 1, ctrl)

      if evt.target.files.length == 1
        if FileReader?
          ngForm.$setValidity('process', false, ctrl)
          file = evt.target.files[0]
          if limit && file.size > limit
            limitStr = limit / 1024 / 1024
            limitStr = Math.round(limitStr * 10) / 10
            alert("File exceeds the size limit (#{limitStr} MB). Please try resizing or compressing the file.")
            resetFileInput()
            return

          reader = new FileReader()
          reader.onloadend = ->
            data = reader.result
            # PhoneGap doesn't set mimetype.
            if data.match /^data:base64/
              data.replace 'data:base64', 'data:' + (MimeType.lookup(file.name) || 'application/octet-stream') + ';base64'

            ngForm.$setValidity('process', true, ctrl)
            $parse(model).assign($scope, {
              name: file.name,
              raw_data: data,
            })
          reader.readAsDataURL(file)
        else
          alert('File uploads are not supported on your browser.')
      else
        $parse(model).assign($scope, '')
    )

    $scope.takePhoto = ->
      return if !navigator.camera?.getPicture?

      success = (data) ->
        dataURI = 'data:image/jpeg;base64,' + data
        elem.val('')
        ngForm.$setValidity('required', true, ctrl)
        $parse(model).assign($scope, {
          name: 'photo.jpg',
          raw_data: dataURI,
        })

      error = (err) ->
        console.log 'Error taking picture: ' + err

      navigator.camera.getPicture success, error,
        sourceType: 1,      # Camera.PhotoSourceType.CAMERA
        destinationType: 0, # Camera.DestinationType.DATA_URI
        quality: 90

    $scope.downloadFile = (url, name) ->
      Download.downloadURL(url, name)

    $scope.saveFileData = (data, name) ->
      Download.downloadDataURI(data, name)

    elem.parents('.modal').on 'modal-toggle', ->
      ngForm = $scope[$scope.node + 'Form']
      resetFileInput()

      elem.attr('required', required)
      if $parse(model)($scope)?
        ngForm.$setValidity('required', true, ctrl)
        elem.attr('required', false)
]
