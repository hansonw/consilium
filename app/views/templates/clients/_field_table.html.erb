<div class="well" data-ng-class="changedSections.<%= field[:id] %> && 'changed'">
  <div id="<%= field[:id] %>" class="section">
    <a class="section-edit pull-right pure-button pure-button-success"
       <% if field.has_key?(:createHref) %>
         <%= raw "data-ng-href='#{h field[:createHref]}'" %>
       <% elsif field.has_key?(:createCallback) %>
         <%= raw "data-ng-click='#{h field[:createCallback]}'" %>
       <% else %>
         <%= raw "modal-toggle='#{field[:id]}'" %>
       <% end %>
       data-ng-show="!clientChangeId">
      <i class="icon-plus"></i> <span class="only-desktops"><%= field[:modalTitle] || "Add #{field[:name].singularize}" %></span>
    </a>
    <h3 class="no-top-margin no-bottom-margin"><%= index %>. <%= field[:name] %></h3>
  </div>
  <%= render :partial => 'templates/action_table',
             :locals => {
               :name => 'data',
               :model => "#{root || 'client'}.#{field[:id]}.value",
               :rowClick => field[:editCallback] ||
                            if field.has_key?(:editHref)
                            then "navigateTo('#{field[:editHref]}')"
                            else "editInField('#{field[:id]}', #{if defined? root then "'#{root}'" else 'null' end}, $index)" end,
               :fields => [
                 {
                   # TODO/HACK: We should dynamically get this by recursively going down the tree.
                   :name => (field[:type].first.has_key?(:type) && field[:type].first[:type].is_a?(Array)) ? field[:type].first[:type].first[:name] : field[:type].first[:name],
                   :content => "{{ item.#{(field[:type].first.has_key?(:type) && field[:type].first[:type].is_a?(Array)) ? field[:type].first[:type].first[:id] : field[:type].first[:id]}.value }}"
                 },
               ],
               :actions => [
                 {
                   :class => 'pure-button-primary',
                   :icon => 'icon-edit',
                   :click => field[:editCallback] ||
                             if field.has_key?(:editHref)
                             then "navigateTo('#{field[:editHref]}')"
                             else "editInField('#{field[:id]}', #{if defined? root then "'#{root}'" else 'null' end}, $index)" end,
                 },
                 {
                   :class => 'pure-button-error',
                   :icon => 'icon-trash',
                   :click => field[:deleteCallback] ||
                             "deleteFromField('#{field[:id]}', #{if defined? root then "'#{root}'" else 'null' end}, $index)",
                   :attrs => "data-ng-show='!clientChangeId'"
                 },
               ],
             } %>
</div>
<div class="separator"></div>
