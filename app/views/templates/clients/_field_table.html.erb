<div class="well" data-ng-class="changedSections.<%= field[:id] %> && 'changed'">
  <div id="<%= field[:id] %>" class="section flash-on-update">
    <button class="section-edit pull-right pure-button pure-button-success"
       <% if field.has_key?(:createHref) %>
         <%= raw "data-click-href='#{h field[:createHref]}'" %>
       <% elsif field.has_key?(:createCallback) %>
         <%= raw "data-ng-click='#{h field[:createCallback]}'" %>
       <% else %>
         <%= raw "modal-toggle='#{field[:id]}'" %>
       <% end %>
       data-ng-show="!clientChangeId">
      <i class="icon-plus pull-left"></i>
      <i class="icon-ellipsis-vertical pull-right"></i>
      <span class="only-desktops"><%= field[:buttonTitle] || "Add #{field[:name].singularize}" %></span>
    </button>
    <h3 class="no-top-margin no-bottom-margin"><%= index %>. <%= field[:name] %></h3>
  </div>
  <%= render :partial => 'templates/action_table',
             :locals => {
               :name => 'data',
               :model => "#{root || 'client'}.#{field[:id]}.value",
               :rowClick => field[:editCallback] ||
                            !field[:editHref] && "editInField('#{field[:id]}', '#{local_assigns[:root]}', $index)",
               :rowHref => field[:editHref],
               :fields => field[:displayFields] || [
                 {
                   # TODO/HACK: We should dynamically get this by recursively going down the tree.
                   :name => (field[:type].first.has_key?(:type) && field[:type].first[:type].is_a?(Array)) ? field[:type].first[:type].first[:name] : field[:type].first[:name],
                   :content => "{{ item.#{(field[:type].first.has_key?(:type) && field[:type].first[:type].is_a?(Array)) ? field[:type].first[:type].first[:id] : field[:type].first[:id]}.value }}"
                 },
               ],
               :actions => [
                 {
                   :class => '{{ !readonly && "pure-button-primary" }}',
                   :icon => '{{ readonly ? "icon-eye-open" : "icon-edit" }}',
                   :click => field[:editCallback] ||
                             !field[:editHref] && "editInField('#{field[:id]}', '#{local_assigns[:root]}', $index)",
                   :href => field[:editHref],
                 },
                 {
                   :class => 'pure-button-error',
                   :icon => 'icon-trash',
                   :click => field[:deleteCallback] ||
                             "deleteFromField('#{field[:id]}', '#{local_assigns[:root]}', $index)",
                   :attrs => "data-ng-show='!clientChangeId'"
                 },
               ],
             } %>
</div>
<div class="separator"></div>
