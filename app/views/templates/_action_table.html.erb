<% # Start by doing some cleanup on the passed parameters. %>
<% if !local_assigns[:field].nil? %>
  <% if field.is_a?(Hash) %>
    <% name = field[:id] if local_assigns[:name].nil? %>
    <% model = field[:id] if local_assigns[:model].nil? %>
    <% rowClick = "editInField('#{field[:id]}', null, $index)" if local_assigns[:rowClick] == true %>
    <% fields = getPrimaryFieldsFromModel(field[:type]) if local_assigns[:fields].nil? %>
  <% elsif field.is_a?(Class) %>
    <% id = field.to_s.downcase.pluralize %>
    <% name = id if local_assigns[:name].nil? %>
    <% model = id if local_assigns[:model].nil? %>
    <% rowClick = "editInField('#{id}', null, $index)" if local_assigns[:rowClick] == true %>
    <% fields = getPrimaryFieldsFromModel(field::FIELDS) if local_assigns[:fields].nil? %>
  <% end %>
<% end %>

<table class="<%= name %>-table pure-table pure-table-horizontal pure-table-full-width"
       <%= local_assigns[:infiniteScroll] && "infinite-scroll data-update='#{local_assigns[:infiniteScroll]}'" %>
       <%= local_assigns[:pagination] && raw("pagination='#{model}' pagination-limit='10'") %> >
  <thead>
    <tr>
      <% fields.each do |field| %>
        <th class="<%= field[:id] %>"
         <% if local_assigns[:sortable] %>
            data-ng-click="<%= model %>Reverse = <%= model %>Predicate == '<%= field[:id] %>' ? !<%= model %>Reverse : false;
              <%= model %>Predicate = '<%= field[:id] %>';
              updateResults()"
         <% end %>
        >
          <%= raw '<a href="" class="pretty" data-ng-class="' + "#{model}Predicate == '#{field[:id]}' ? 'bold' : 'regular'" + '">' if local_assigns[:sortable] %><%= field[:name] %><%= raw '</a>' if local_assigns[:sortable] %>
          <% if local_assigns[:sortable] %>
            <i class="icon-caret-up" data-ng-show="<%= model %>Predicate == '<%= field[:id] %>' && !<%= model %>Reverse"></i>
            <i class="icon-caret-down" data-ng-show="<%= model %>Predicate == '<%= field[:id] %>' && <%= model %>Reverse"></i>
          <% end %>
        </th>
      <% end %>
      <th class="actions align-right"></th>
    </tr>
  </thead>
  <tbody>
    <tr data-ng-show="!<%= name %>Loading && <%= name %>Error">
      <td colspan="<%= fields.length + 1 %>">Could not load <%= name %>. Please try again later</td>
    </tr>
    <tr data-ng-show="!<%= name %>Loading && !<%= name %>Error && !<%= model %>.length">
      <td colspan="<%= fields.length + 1 %>"><em>None or N/A.</em></td>
    </tr>
    <tr data-ng-repeat="item in <%= model %><%= ".slice(0, #{limit})" if !local_assigns[:limit].nil? -%>
        <%= " | orderBy:(#{model}Predicate + '.value || ' + #{model}Predicate):#{model}Reverse" if local_assigns[:sortable] && !sortable[:server_side] -%>
        <%= " | startFrom:pagination['#{model}'].start | limitTo:pagination['#{model}'].limit" if local_assigns[:pagination] %>"
        <%= local_assigns[:rowHref] && raw("data-click-href='#{h rowHref}'") %>
        <%= local_assigns[:rowClick] && raw("data-ng-click='#{h rowClick}'") %>
        <%= local_assigns[:rowClass] && raw("data-ng-class='#{h rowClass}'") %> data-item-id="{{ item.id }}" >
      <% fields.each do |field| %>
        <td class="<%= field[:id] %>"><%= raw field[:content] %></td>
      <% end %>
      <td class="actions align-right">
        <% actions.each do |action| %>
          <% action = actionHandleDefault(action, local_assigns[:id] || name, local_assigns[:rowHref] && rowHref) %>
          <a <% if !action[:href].nil? %>data-click-href="<%= action[:href] %>"<% end %> data-ng-click="<%= action[:click] %>"
             class="pure-button pure-button-small <%= action[:class] %>" <%= raw action[:attrs] %> eat-click>
            <i class="<%= action[:icon] %> icon-large"></i>
          </a>
        <% end %>
      </td>
    </tr>
    <tr data-ng-show="<%= name %>Loading">
      <td colspan="<%= fields.length + 1 %>"><i class="icon-spinner icon-spin icon-large"></i> Loading...</td>
    </tr>
  </tbody>
</table>
